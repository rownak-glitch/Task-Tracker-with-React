{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onclick","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf74ef7d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nconst Button=({color,text,onclick})=>{\r\n    return(\r\n        <button onClick={onclick} style={{backgroundColor:color}} className='btn'>{text}</button>\r\n    );\r\n}\r\n\r\nButton.propTypes={\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onclick: PropTypes.func,\r\n}\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport Button from './Button';   \r\nconst Header=({title, onAdd,showAdd})=>{\r\n  \r\n\r\n    return(\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'Red':\"green\" } text={ showAdd ? \"Close\" : \"Add\"} onclick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n     // it will help to give error suppose\r\n    //you gave props title  as 1 in app .js and after saving it will give error that string is required as a header not integer\r\n}\r\n\r\nexport default Header;","// for each task we need a separate component so we created Task.js\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task=({task, onDelete, onToggle})=>{\r\n    return(\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color:'red', cursor:'pointer'}} onClick={()=>onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Task;","import Task from './Task'\r\n\r\nconst Tasks=({tasks, onDelete, onToggle})=>{\r\n    return(\r\n        <>\r\n        {tasks.map((task)=>(\r\n            < Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>  // as we were getting warning in the console that a list should have key props we gave a key prop as task.id\r\n        ))}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import {useState} from 'react'\r\n\r\n\r\n\r\nconst AddTask= ({onAdd})=> {\r\n\r\n    const[text, setText] =useState('')\r\n    const[day, setDay] =useState('')\r\n    const[reminder, setReminder] =useState(false)\r\n\r\n    const onSubmit= (e) =>{\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add Task')\r\n            return\r\n        }\r\n\r\n        onAdd({text,day,reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className ='add-form' onSubmit={onSubmit}>\r\n           <div className='form-control'>\r\n               <label>Task</label>\r\n               <input type=\"text\" placeholder='Add Task' value={text} onChange={(e)=> setText(e.target.value)}/>\r\n           </div>\r\n           <div className='form-control'>\r\n               <label>Day and Time</label>\r\n               <input type=\"text\" placeholder='Add Day and time'  value={day} onChange={(e)=> setDay(e.target.value)}/>\r\n           </div>\r\n           <div className='form-control form-control-check'>\r\n               <label>Set Remainder</label>\r\n               <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)} />\r\n           </div>\r\n\r\n           <input type=\"submit\" value='Save Task' className=\"btn btn-block\"/>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import  React from 'react';\nimport Header from './components/Header';\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport {useState} from 'react';\n\nfunction App() {\n  const[showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState(\n    [{\n        id:1,\n        text:\"CSE220 lab Assignment Submission\",\n        day:'21st April,2021',\n        reminder:true,\n    },\n    {\n        id:2,\n        text:'CSE460 Quiz',\n        day:'22nd April,2021',\n        reminder:true,\n    \n    \n    },\n    {\n        id:3,\n        text:'CSE461 class',\n        day:'23rd April,2021',\n        reminder:true,\n    }\n    ]\n)\n\n\n\n// tasks is the piece of state and setTasks is the function to update the state tasks\n// state is immutable it is a one way data and not something you can directly change\n//we use setTasks instead we want to add\n\n\n//AddTask\nconst addTask= (task)=>{\n  const id= Math.floor(Math.random()*10000) +1\n  const newTask ={id, ...task}\n  setTasks([...tasks,newTask])\n}\n\n//Delete task\nconst deleteTask=(id)=>{\n  setTasks(tasks.filter((task)=>task.id!==id))\n}\n\n//the delete buttton for a task will be in Task.js which is imported in Tasks.js so we will send props onDelete to Tasks.js\n \n\n//Toggle remainder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task)=> task.id=== id ? {...task, reminder:!task.reminder} : task))\n}\n\n\n  return (\n    <div className=\"container\">\n      <Header title = 'Task Tracker' onAdd = {()=>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length>0 ?( <Tasks tasks ={tasks} onDelete={deleteTask}  onToggle={toggleReminder} /> ): 'No task available' }\n      \n  \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}